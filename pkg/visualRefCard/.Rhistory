help(package="RODBC")
f = system.file("templateDocs", "Sample3sheets.xslx", package = "RExcelXML")
wb = workbook(f)
f = system.file("templateDocs", "Sample3sheets.xlsx", package = "RExcelXML")
wb = workbook(f)
wb
names(wb)
wb[[“Sheet1”]]
wb[["Sheet1"]]
wb[[“Sheet1”, asXML = FALSE]]
wb[["Sheet1", asXML = FALSE]]
sh <- wb[["Sheet1"]]
sh[	]
dim(sh)
f = system.file("~/Downloads/Danestal 61-n°4")
wb = workbook(f)
?system.file
wb = workbook(f)
wb <- workbook("~/Downloads/Danestal 61-n°4")
?workbook
wb[[1]]
wb <- workbook("~/Downloads/Danestal 61-n°4")
wb[[1]]
help(package="RExcelXML")
help(package="ROOXML")
getEntryType("~/Downloads/Danestal 61-n°4")
?getEntryType("~/Downloads/Danestal 61-n°4")
  oo = createOODoc(system.file("SampleDocs", "pics.docx", package = "ROOXML"))#
  getEntryType("theme1.xml",
oo)
?createOODoc
 excelDoc("~/Downloads/Danestal 61-n°4")
 excelDoc("~/Downloads/Danestal\\ 61-n°4")
 excelDoc("~/Downloads/Danestal 61-n°4")
?createOODoc
library(ROOXML)
?createOODoc
createOODoc("~/Downloads/Danestal 61-n°4")
traceback()
createOODoc("~/Downloads/Danestal 61-n°4")
createOODoc("~/Downloads/test.xls")
library(RODBC)
?odbcConnectExcel
?odbcConnect
?open
f <- file("~/litterature/projet/2009Caen/bougy/sources/converted/")
read(f)
?file
seek(f)
open(f)
read(f)
o <- open(f)
close(f)
o <- open(f)
f <- file("~/litterature/projet/2009Caen/bougy/sources/converted/")
o <- open(f)
read()
read(o)
?o
?open
scan(d)
scan(f)
scan(o)
scan(f)
?dir
list.files(path = "~/litterature/projet/2009Caen/bougy/sources/converted/", pattern = ".+csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE)
files <- list.files(path = "~/litterature/projet/2009Caen/bougy/sources/converted/", pattern = ".+csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE)
files
strsplit(files, "_")
gregexpr("_", files)
files
#
for (i in 1:length(names)) {#
  print(substr(files[i], rev(names[[i]])[1]));#
}
files <- list.files(path = "~/litterature/projet/2009Caen/bougy/sources/converted/", pattern = ".+csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE);#
#
parts_names <- gregexpr("_", files);#
#
for (i in 1:length(parts_names)) {#
  print(substr(files[i], rev(parts_names[[i]])[1]));#
}
traceback()
parts_names <- gregexpr("_", files);
for (i in 1:length(parts_names)) {#
  if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  print(substr(files[i], rev(parts_names[[i]])[1]));#
}
filesq
files
?substr
for (i in 1:length(parts_names)) {#
  if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  print(substr(files[i], rev(parts_names[[i]])[1]));#
}
?substr
#
for (i in 1:length(parts_names)) {#
  if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  print(substr(files[i], rev(parts_names[[i]])[1], nchar(files[i]));#
}
for (i in 1:length(parts_names)) {#
  if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  print(substr(files[i], rev(parts_names[[i]])[1], nchar(files[i])));#
}
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  print(#
      substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        )#
      );#
}
suffixes <- characters(0);#
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  suffixes <- append(suffixes, suffixe);#
}#
#
table(suffixes);
suffixes <- character(0);#
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  suffixes <- append(suffixes, suffixe);#
}#
#
table(suffixes);
dir <- "~/litterature/projet/2009Caen/bougy/sources/converted/";
read.csv(paste(dir, files[1], sep=""));
?read.csv
read.csv2(paste(dir, files[1], sep=""));
suffixes <- character(0);#
identifiants <- character(0);#
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- #
    substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] + 1#
        );#
  suffixes <- append(suffixes, suffixe);#
  identifiants <- append(identifiants, identifiant);#
}#
#
table(suffixes);#
table(identifiant);#
length(identifiant);
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- #
    substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] + 1#
        );#
  suffixes <- append(suffixes, suffixe);#
  print(identifiant);#
  identifiants <- append(identifiants, identifiant);#
}
suffixes <- character(0);#
identifiants <- character(0);#
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- #
    substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  suffixes <- append(suffixes, suffixe);#
  #print(identifiant);#
  identifiants <- append(identifiants, identifiant);#
}#
#
table(suffixes);#
#table(identifiant);#
length(identifiant);
parts_names <- gregexpr("_", files);#
#
suffixes <- character(length(parts_names));#
identifiants <- character(length(parts_names));#
for (i in 1:length(parts_names)) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- #
    substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  #suffixes <- append(suffixes, suffixe);#
  suffixes[i] <- suffixe;#
  #print(identifiant);#
  identifiants[i] <- identifiant;#
  #identifiants <- append(identifiants, identifiant);#
}
#
table(suffixes);#
#table(identifiant);#
length(identifiant);
#
nbr.file <- lenth(parts_names);#
#
suffixes <- character(nbr.file);#
identifiants <- character(nbr.file);#
#
for (i in 1:nbr.file) {#
  #if (length(parts_names[[i]]) < 1) print(parts_names[[i]])#
  suffixe <- #
    substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- #
    substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  suffixes[i] <- suffixe;#
  identifiants[i] <- identifiant;#
}#
#
table(suffixes);#
length(identifiant);
all.equal
?all.equal
all.equal(c(1, 2, 3), c(1, 2, 3))
all.equal(c(1, 2, 3), c(1, 2, 4))
isTRUE(all.equal(c(1, 2, 3), c(1, 2, 4)))
table(identifiant);
?vector
nbr.file <- lenth(parts_names);#
nbr.enqu <- nbr.file/4;#
#
suffixes <- character(nbr.file);#
identifiants <- character(nbr.file);#
#
corpus <- vector(length=nbr.enqu, mode="list");#
#
for (i in 1:nbr.file) {#
  suffixe <- substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  suffixes[i] <- suffixe;#
  #
  print(identifiant);#
  identifiants[i] <- identifiant;#
#
}
nbr.file <- length(parts_names);#
nbr.enqu <- nbr.file/4;#
#
suffixes <- character(nbr.file);#
identifiants <- character(nbr.file);#
#
corpus <- vector(length=nbr.enqu, mode="list");#
#
for (i in 1:nbr.file) {#
  suffixe <- substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  suffixes[i] <- suffixe;#
  #
  print(identifiant);#
  identifiants[i] <- identifiant;#
#
}#
#
table(suffixes);#
length(identifiant);#
table(identifiant);
length(identifiants);#
table(identifiants);
unique(identifiants)
corpus <- vector(length=nbr.enqu, mode="list");#
corpus <- lapply(corpus, function(x) return(list()));
corpus
for (i in 1:nbr.file) {#
  df <- read.csv2(paste(dir, files[1], sep=""));#
  corpus[[ identifiants[i] ]][[ suffixes[i] ]] <- df;#
}
corpus
for (i in 1:nbr.file) {#
  df <- read.csv2(paste(dir, files[i], sep=""));#
  corpus[[ identifiants[i] ]][[ suffixes[i] ]] <- df;#
}
corpus[1]
corpus[2]
corpus
corpus[10]
corpus[34]
corpus[50]
corpus[73]
corpus[[73]]
corpus[[73]][1]
corpus[[7]][1]
corpus
corpus[[7]]
corpus
corpus <- vector(length=nbr.enqu, mode="list");#
#corpus <- lapply(corpus, function(x) return(list()));#
#names(corpus) <- identifiants.u;#
#
for (i in 1:nbr.file) {#
  df <- read.csv2(paste(dir, files[i], sep=""));#
  corpus[[ identifiants[i] ]][[ suffixes[i] ]] <- df;#
}
corpus[1]
corpus
corpus <- list();#
#corpus <- lapply(corpus, function(x) return(list()));#
#names(corpus) <- identifiants.u;#
#
for (i in 1:nbr.file) {#
  df <- read.csv2(paste(dir, files[i], sep=""));#
  corpus[[ identifiants[i] ]][[ suffixes[i] ]] <- df;#
}
corpus[1]
lapply(corpus, function(x) {x$"Phonétique"[10,]})
table(suffixes);
lapply(corpus, function(x) {x$"Phonétique"})
corpus[1]
names(corpus[[1]])
lapply(corpus, function(x) {names(x)})
lapply(corpus, function(x) { x[["Phonétique"]] })
lapply(corpus, function(x) { x[[1]][10,] })
lapply(corpus, function(x) { x[[3]][10,] })
?read.csv2
dir <- "~/litterature/projet/2009Caen/bougy/sources/converted/";#
files <- list.files(path = dir, pattern = ".+csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE);#
#
parts_names <- gregexpr("_", files);#
#
nbr.file <- length(parts_names);#
nbr.enqu <- nbr.file/4;#
#
suffixes <- character(nbr.file);#
identifiants <- character(nbr.file);#
#
for (i in 1:nbr.file) {#
  suffixe <- substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  suffixes[i] <- suffixe;#
  #
  print(identifiant);#
  identifiants[i] <- identifiant;#
}#
#
t.s <- table(suffixes);#
l.i <- length(identifiants);#
t.i <- table(identifiants);#
identifiants.u <- unique(identifiants);#
#
print("Nombre d'enquêtes:");#
print(nbr.equ);#
print(length(identifiants.u));#
print(t.s);#
#
corpus <- list();#
#corpus <- lapply(corpus, function(x) return(list()));#
#names(corpus) <- identifiants.u;#
#
for (i in 1:nbr.file) {#
  df <- read.csv2(paste(dir, files[i], sep=""), header=TRUE);#
  corpus[[ identifiants[i] ]][[ suffixes[i] ]] <- df;#
}
lapply(corpus, function(x) { x[[3]][10,] })
lapply(corpus, function(x) { x[[3]][10,3] })
?read.csv2
dir <- "~/litterature/projet/2009Caen/bougy/sources/converted/";#
files <- list.files(path = dir, pattern = ".+csv", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE);#
#
parts_names <- gregexpr("_", files);#
#
nbr.file <- length(parts_names);#
nbr.enqu <- nbr.file/4;#
#
suffixes <- character(nbr.file);#
identifiants <- character(nbr.file);#
#
for (i in 1:nbr.file) {#
  suffixe <- substr(#
        files[i],#
        rev(parts_names[[i]])[1] + 1,#
        nchar(files[i]) - 4#
        );#
  identifiant <- substr(#
        files[i],#
        1,#
        rev(parts_names[[i]])[1] - 1#
        );#
  suffixes[i] <- suffixe;#
  #
  print(identifiant);#
  identifiants[i] <- identifiant;#
}#
#
t.s <- table(suffixes);#
l.i <- length(identifiants);#
t.i <- table(identifiants);#
identifiants.u <- unique(identifiants);#
#
print("Nombre d'enquêtes:");#
print(nbr.enqu);#
print(length(identifiants.u));#
print(t.s);#
#
corpus <- list();#
#corpus <- lapply(corpus, function(x) return(list()));#
#names(corpus) <- identifiants.u;#
#
for (i in 1:nbr.file) {#
  df <- read.csv2(paste(dir, files[i], sep=""), header=TRUE, stringsAsFactors=FALSE);#
  corpus[[ identifiants[i] ]][[ suffixes[i] ]] <- df;#
}
lapply(corpus, function(x) { x[[3]][10,3] })
lapply(corpus, function(x) { x[[3]][10,4] })
unlist(lapply(corpus, function(x) { x[[3]][10,4] }))
c(unlist(lapply(corpus, function(x) { x[[3]][10,4] })))
source("/Users/sylvainloiseau/litterature/projet/2009Caen/bougy/process.R")
lapply(corpus, function(x) { x[[3]][10,4] })
??trim
strtrim(c("abcdef", "abcdef", "abcdef"), c(1,5,10))
lapply(corpus, function(x) { x[[3]][10,4] })
corpus <- read.table("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO.txt")
corpus <- read.table("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO.txt", encoding="latin1")
corpus <- scan("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO.txt", encoding="latin1")
corpus <- scan("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO.txt", encoding="latin1", class="character")
corpus <- scan("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO.txt", encoding="latin1", what="character")
corpus[1:10]
?scan
corpus <- readLines("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO-short.txt")
corpus[1]
corpus[1:2]
corpus <- readLines("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/2000-2002-ECO-short.txt", encoding="latin1")
corpus[1:2]
strsplit()
?strsplit
strsplit("un deux trois", " ")
unique
by
?by
rownames(matrix(0,2,2)) <- c("", "deux")
m <- matrix(0,2,2)
m
rownames(m) <- c("", "un")
m
m["", 2] <- 1
table(character(0))
names(table(character(0)))
help(package="base")
library(help=base)
library
corpus <- read.table("/Users/sylvainloiseau/litterature/projet/2009Caen/projets/ALaBiber/A la biber/résultats 3 grams/R-Le Monde.TXT")
corpus <- read.table("/Users/sylvainloiseau/litterature/projet/2009Caen/projets/ALaBiber/A la biber/résultats 3 grams/R-Le Monde.TXT", encoding="latin1")
corpus <- read.table("/Users/sylvainloiseau/litterature/projet/2009Caen/projets/ALaBiber/A la biber/résultats 3 grams/R-Le Monde.TXT", encoding="latin1", head=F)
corpus <- read.table("/Users/sylvainloiseau/litterature/projet/2009Caen/projets/ALaBiber/A la biber/résultats 3 grams/R-Le Monde.TXT", encoding="latin1", head=F, sep="\t")
occ <- LETTERS
occ
length(occ)
parties <- c(rep(1, 13), rep(2, 13))
parties
lapply(occ, parties)
tapply(occ, parties, table)
corpus <- read.table("/Users/sylvainloiseau/litterature/projet/2009Caen/projets/ALaBiber/A la biber/résultats 3 grams/R-Le Monde.TXT", encoding="latin1", header=F, sep="\t")
?read.table
corpus <- read.table("/Users/sylvainloiseau/litterature/projet/2009Caen/projets/ALaBiber/A la biber/résultats 3 grams/R-Le Monde.TXT", encoding="latin1", header=F, sep="\t")
dhyper(1:20, 20, 50, 100)
?dhyper
dhyper(1:20, 20, 80, 50)
barplot(dhyper(1:20, 20, 80, 50))
?barplot
barplot(dhyper(1:20, 20, 80, 50), col="white", ylab=1:20)
barplot(dhyper(1:20, 20, 80, 50), col="white", xtip=1:20)
barplot(dhyper(1:20, 20, 80, 50), col="white", xmark=1:20)
?par
barplot(dhyper(1:20, 20, 80, 50), col="white")
?barplot
barplot(dhyper(1:20, 20, 80, 50), col="white", names.arg=1:20)
sum(dhyper(1:20, 20, 80, 50))
sum(dhyper(1:6, 20, 80, 50))
sum(dhyper(1:6, 200, 808, 50))
barplot(dhyper(1:200, 200, 800, 500), col="white", names.arg=1:20)
barplot(dhyper(1:200, 200, 800, 500), col="white", names.arg=1:200)
sum(dhyper(1:80, 200, 800, 500))
sum(dhyper(80:120, 200, 800, 500))
barplot(dhyper(1:200, 200, 800, 500), col="white", names.arg=1:200)
qhyper(c(.05), 200, 800, 500)
qhyper(c(.5), 200, 800, 500)
qhyper(c(.05), 200, 800, 500)
qhyper(c(99.5), 200, 800, 500)
qhyper(c(.95), 200, 800, 500)
qhyper(c(.975), 200, 800, 500)
qhyper(c(.025), 200, 800, 500)
x <- rnorm(1000)
hist(x)
hist(x^2)
hist(x^2 + x^2)
hist(x^2 + x^2, probability=T)
curve(dchisq(x, 2), add=T)
hist(x + x)
tle <- read.table("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/matrice.txt")
tle <- read.table("/Users/sylvainloiseau/cours/2009TimM2/site/corpus/matrice.txt", encoding="latin1")
source("/Users/sylvainloiseau/cours/2009TimM2/site/R/specificites.R")
source("/Users/sylvainloiseau/cours/2009TimM2/site/R/fusionLignes.R")
souscorpus <- fusionneLignes(tle, tle$"PrénomM" > 0)
specificites(souscorpus, parts=1)
souscorpus <- fusionneLignes(tle, tle$"PrénomF" > 0)
specificites(souscorpus, parts=1)
souscorpus <- fusionneLignes(tle, tle$"elle" > 0)
specificites(souscorpus, parts=1)
?combn
?crossprod
setwd("/Users/sylvainloiseau/workspace/drawExpression/visualRefCard/")
plotR("t(m)", "t.pdf")
source("../R/drawExpression.R");#
#
# anatomy of a vector#
#
plotR <- function(expr, file) {#
  par(mar=c(0,0,0,0));#
  drawExpression(expr, filename=file);#
}
plotR("t(m)", "t.pdf")
m <- matrix(1:6, 2);
plotR("t(m)", "t.pdf")
plotR("m[2,3]", "matrix_extraction.pdf")
plotR("list(1:3, matrix(1:4, 2), 2)", "list_matrix.pdf");
